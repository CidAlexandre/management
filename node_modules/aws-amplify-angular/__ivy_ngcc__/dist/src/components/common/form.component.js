// tslint:disable
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
// tslint:enable
import { Component, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

var _c0 = [[["", "form-body", ""]], [["", "form-footer", ""]]];
var _c1 = ["[form-body]", "[form-footer]"];
var template = "\n<div class=\"amplify-form\">\n  <div class=\"form-header\">\n    <div class=\"form-title\">{{ title }}</div>\n  </div>\n  <div class=\"form-body\">\n    <ng-content select=\"[form-body]\"></ng-content>\n  </div>\n  <div class=\"form-footer\">\n    <ng-content select=\"[form-footer]\"></ng-content>\n  </div>\n</div>\n";
var FormComponent = /** @class */ (function () {
    function FormComponent() {
    }
    Object.defineProperty(FormComponent.prototype, "title", {
        set: function (title) {
            this.title = title;
        },
        enumerable: true,
        configurable: true
    });
    /** @nocollapse */
    FormComponent.propDecorators = {
        "title": [{ type: Input },],
    };
FormComponent.ɵfac = function FormComponent_Factory(t) { return new (t || FormComponent)(); };
FormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormComponent, selectors: [["amplify-form"]], inputs: { title: "title" }, ngContentSelectors: _c1, decls: 20, vars: 1, consts: [[1, "amplify-form"], [1, "form-header"], [1, "form-title"], [1, "form-body"], [1, "form-footer"]], template: function FormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵtext(0, "\n");
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n  ");
        ɵngcc0.ɵɵelementStart(3, "div", 1);
        ɵngcc0.ɵɵtext(4, "\n    ");
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(7, "\n  ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(8, "\n  ");
        ɵngcc0.ɵɵelementStart(9, "div", 3);
        ɵngcc0.ɵɵtext(10, "\n    ");
        ɵngcc0.ɵɵprojection(11);
        ɵngcc0.ɵɵtext(12, "\n  ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(13, "\n  ");
        ɵngcc0.ɵɵelementStart(14, "div", 4);
        ɵngcc0.ɵɵtext(15, "\n    ");
        ɵngcc0.ɵɵprojection(16, 1);
        ɵngcc0.ɵɵtext(17, "\n  ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(18, "\n");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(19, "\n");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormComponent, [{
        type: Component,
        args: [{
                selector: 'amplify-form',
                template: template
            }]
    }], function () { return []; }, { title: [{
            type: Input
        }] }); })();
    return FormComponent;
}());
export { FormComponent };

//# sourceMappingURL=form.component.js.map