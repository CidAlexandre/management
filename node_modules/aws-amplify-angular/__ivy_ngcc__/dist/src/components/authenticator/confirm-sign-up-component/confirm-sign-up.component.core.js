// tslint:disable
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
// tslint:enable
import { Component, Input, Inject } from '@angular/core';
import { AmplifyService } from '../../../providers/amplify.service';
import { labelMap } from '../common';
import { auth } from '../../../assets/data-test-attributes';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../../../providers/amplify.service';

function ConfirmSignUpComponentCore_div_1_div_52_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 21);
    ɵngcc0.ɵɵtext(1, "\n  ");
    ɵngcc0.ɵɵelementStart(2, "div", 22);
    ɵngcc0.ɵɵtext(3, "\n    ");
    ɵngcc0.ɵɵelementStart(4, "span", 23);
    ɵngcc0.ɵɵtext(5, "\u26A0");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n    ");
    ɵngcc0.ɵɵelementStart(7, "div", 24);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(9, "\n    ");
    ɵngcc0.ɵɵelementStart(10, "a", 25);
    ɵngcc0.ɵɵlistener("click", function ConfirmSignUpComponentCore_div_1_div_52_Template_a_click_10_listener() { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onAlertClose(); });
    ɵngcc0.ɵɵtext(11, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12, "\n  ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.amplifyService.i18n().get(ctx_r3.errorMessage));
} }
function ConfirmSignUpComponentCore_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtext(1, "\n");
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵtext(3, "\n  ");
    ɵngcc0.ɵɵelementStart(4, "div", 3);
    ɵngcc0.ɵɵtext(5, "\n    ");
    ɵngcc0.ɵɵelementStart(6, "div", 4);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n    ");
    ɵngcc0.ɵɵelementStart(9, "div", 5);
    ɵngcc0.ɵɵtext(10, "\n      ");
    ɵngcc0.ɵɵelementStart(11, "label", 6);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n      ");
    ɵngcc0.ɵɵelement(14, "input", 7, 8);
    ɵngcc0.ɵɵtext(16, "\n    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(17, "\n    ");
    ɵngcc0.ɵɵelementStart(18, "div", 5);
    ɵngcc0.ɵɵtext(19, "\n      ");
    ɵngcc0.ɵɵelementStart(20, "label", 9);
    ɵngcc0.ɵɵtext(21);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(22, "\n      ");
    ɵngcc0.ɵɵelementStart(23, "input", 10, 11);
    ɵngcc0.ɵɵlistener("change", function ConfirmSignUpComponentCore_div_1_Template_input_change_23_listener() { ɵngcc0.ɵɵrestoreView(_r7); var _r2 = ɵngcc0.ɵɵreference(24); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.setCode(_r2.value); })("keyup", function ConfirmSignUpComponentCore_div_1_Template_input_keyup_23_listener() { ɵngcc0.ɵɵrestoreView(_r7); var _r2 = ɵngcc0.ɵɵreference(24); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.setCode(_r2.value); })("keyup.enter", function ConfirmSignUpComponentCore_div_1_Template_input_keyup_enter_23_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onConfirm(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(25, "\n      ");
    ɵngcc0.ɵɵelementStart(26, "span", 12);
    ɵngcc0.ɵɵtext(27);
    ɵngcc0.ɵɵelementStart(28, "a", 13);
    ɵngcc0.ɵɵlistener("click", function ConfirmSignUpComponentCore_div_1_Template_a_click_28_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onResend(); });
    ɵngcc0.ɵɵtext(29);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(30, "\n    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(31, "\n    ");
    ɵngcc0.ɵɵelementStart(32, "div", 14);
    ɵngcc0.ɵɵtext(33, "\n      ");
    ɵngcc0.ɵɵelementStart(34, "div", 15);
    ɵngcc0.ɵɵtext(35, "\n        ");
    ɵngcc0.ɵɵelementStart(36, "div", 16);
    ɵngcc0.ɵɵtext(37, "\n          ");
    ɵngcc0.ɵɵelementStart(38, "a", 17);
    ɵngcc0.ɵɵlistener("click", function ConfirmSignUpComponentCore_div_1_Template_a_click_38_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onSignIn(); });
    ɵngcc0.ɵɵtext(39);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(40, "\n        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(41, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(42, "\n      ");
    ɵngcc0.ɵɵelementStart(43, "div", 18);
    ɵngcc0.ɵɵtext(44, "\n        ");
    ɵngcc0.ɵɵelementStart(45, "button", 19);
    ɵngcc0.ɵɵlistener("click", function ConfirmSignUpComponentCore_div_1_Template_button_click_45_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onConfirm(); });
    ɵngcc0.ɵɵtext(46);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(47, "\n      ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(48, "\n    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(49, "\n  ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(50, "\n");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(51, "\n");
    ɵngcc0.ɵɵtemplate(52, ConfirmSignUpComponentCore_div_1_div_52_Template, 14, 1, "div", 20);
    ɵngcc0.ɵɵtext(53, "\n");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate1("\n      ", ctx_r0.amplifyService.i18n().get("Confirm Sign up"), "");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r0.amplifyService.i18n().get(ctx_r0.getUsernameLabel()), "\n      ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r0.amplifyService.i18n().get(ctx_r0.getUsernameLabel()));
    ɵngcc0.ɵɵproperty("value", ctx_r0.username);
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate1("\n        ", ctx_r0.amplifyService.i18n().get("Confirmation Code *"), "\n      ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r0.amplifyService.i18n().get("Enter your Code"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1("", ctx_r0.amplifyService.i18n().get("Lost your code?"), "\n        ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.amplifyService.i18n().get("Resend Code"));
    ɵngcc0.ɵɵadvance(10);
    ɵngcc0.ɵɵtextInterpolate1("\n            ", ctx_r0.amplifyService.i18n().get("Back to Sign in"), "\n          ");
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.amplifyService.i18n().get("Confirm"));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.errorMessage);
} }
var template = "\n<div class=\"amplify-container\" *ngIf=\"_show\">\n<div class=\"amplify-form-container\" data-test=\"" + auth.confirmSignUp.section + "\">\n  <div class=\"amplify-form-body\" data-test=\"" + auth.confirmSignUp.bodySection + "\">\n    <div\n      class=\"amplify-form-header\"\n      data-test=\"" + auth.confirmSignUp.headerSection + "\"\n    >\n      {{ this.amplifyService.i18n().get('Confirm Sign up') }}</div>\n    <div class=\"amplify-form-row\">\n      <label class=\"amplify-input-label\" for=\"amplifyUsername\">\n        {{ this.amplifyService.i18n().get(getUsernameLabel()) }}\n      </label>\n      <input\n        #amplifyUsername\n        class=\"amplify-form-input\"\n        type=\"text\"\n        disabled\n        placeholder=\"{{ this.amplifyService.i18n().get(getUsernameLabel()) }}\"\n        [value]=\"username\"\n        data-test=\"" + auth.confirmSignUp.usernameInput + "\"\n      />\n    </div>\n    <div class=\"amplify-form-row\">\n      <label class=\"amplify-input-label\" for=\"code\">\n        {{ this.amplifyService.i18n().get('Confirmation Code *') }}\n      </label>\n      <input #code\n        (change)=\"setCode(code.value)\"\n        (keyup)=\"setCode(code.value)\"\n        (keyup.enter)=\"onConfirm()\"\n        class=\"amplify-form-input\"\n        type=\"text\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Enter your Code') }}\"\n        data-test=\"" + auth.confirmSignUp.confirmationCodeInput + "\"\n      />\n      <span class=\"amplify-form-action\">{{ this.amplifyService.i18n().get('Lost your code?') }}\n        <a class=\"amplify-form-link\"\n            (click)=\"onResend()\"\n            data-test=\"" + auth.confirmSignUp.resendCodeLink + "\"\n          >{{ this.amplifyService.i18n().get('Resend Code') }}</a></span>\n    </div>\n    <div class=\"amplify-form-actions\">\n      <div class=\"amplify-form-cell-left\">\n        <div class=\"amplify-form-actions-left\">\n          <a\n            class=\"amplify-form-link\"\n            (click)=\"onSignIn()\"\n            data-test=\"" + auth.confirmSignUp.backToSignInLink + "\"\n            >\n            {{ this.amplifyService.i18n().get('Back to Sign in') }}\n          </a>\n        </div>\n      </div>\n      <div class=\"amplify-form-cell-right\">\n        <button\n          class=\"amplify-form-button\"\n          (click)=\"onConfirm()\"\n          data-test=\"" + auth.confirmSignUp.confirmButton + "\"\n          >{{ this.amplifyService.i18n().get('Confirm') }}</button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n  <div class=\"amplify-alert-body\">\n    <span class=\"amplify-alert-icon\">&#9888;</span>\n    <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n    <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n  </div>\n</div>\n</div>\n";
var ConfirmSignUpComponentCore = /** @class */ (function () {
    function ConfirmSignUpComponentCore(amplifyService) {
        this.amplifyService = amplifyService;
        this._usernameAttributes = 'username';
        this.hide = [];
        this.logger = this.amplifyService.logger('ConfirmSignUpComponent');
    }
    Object.defineProperty(ConfirmSignUpComponentCore.prototype, "data", {
        set: function (data) {
            this.hide = data.hide ? data.hide : this.hide;
            this._authState = data.authState;
            this._show = data.authState.state === 'confirmSignUp';
            this.username = data.authState.user
                ? data.authState.user.username || ''
                : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConfirmSignUpComponentCore.prototype, "authState", {
        set: function (authState) {
            this._authState = authState;
            this._show = authState.state === 'confirmSignUp';
            this.username = authState.user ? authState.user.username || '' : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConfirmSignUpComponentCore.prototype, "usernameAttributes", {
        set: function (usernameAttributes) {
            this._usernameAttributes = usernameAttributes;
        },
        enumerable: true,
        configurable: true
    });
    ConfirmSignUpComponentCore.prototype.ngOnInit = function () {
        if (!this.amplifyService.auth()) {
            throw new Error('Auth module not registered on AmplifyService provider');
        }
    };
    ConfirmSignUpComponentCore.prototype.shouldHide = function (comp) {
        return this.hide.filter(function (item) { return item === comp; }).length > 0;
    };
    ConfirmSignUpComponentCore.prototype.setUsername = function (username) {
        this.username = username;
    };
    ConfirmSignUpComponentCore.prototype.setCode = function (code) {
        this.code = code;
    };
    ConfirmSignUpComponentCore.prototype.onConfirm = function () {
        var _this = this;
        this.amplifyService
            .auth()
            .confirmSignUp(this.username, this.code)
            .then(function () { return _this.logger.info('confirm success'); })
            .catch(function (err) { return _this._setError(err); });
    };
    ConfirmSignUpComponentCore.prototype.onResend = function () {
        var _this = this;
        this.amplifyService
            .auth()
            .resendSignUp(this.username)
            .then(function () { return _this.logger.info('code resent'); })
            .catch(function (err) { return _this._setError(err); });
    };
    ConfirmSignUpComponentCore.prototype.onSignIn = function () {
        this.onAlertClose();
        this.amplifyService.setAuthState({ state: 'signIn', user: null });
    };
    ConfirmSignUpComponentCore.prototype.onAlertClose = function () {
        this._setError(null);
    };
    ConfirmSignUpComponentCore.prototype._setError = function (err) {
        if (!err) {
            this.errorMessage = null;
            return;
        }
        this.errorMessage = err.message || err;
    };
    ConfirmSignUpComponentCore.prototype.getUsernameLabel = function () {
        return (labelMap[this._usernameAttributes] || this._usernameAttributes);
    };
    /** @nocollapse */
    ConfirmSignUpComponentCore.ctorParameters = function () { return [
        { type: AmplifyService, decorators: [{ type: Inject, args: [AmplifyService,] },] },
    ]; };
    ConfirmSignUpComponentCore.propDecorators = {
        "data": [{ type: Input },],
        "hide": [{ type: Input },],
        "authState": [{ type: Input },],
        "usernameAttributes": [{ type: Input },],
    };
ConfirmSignUpComponentCore.ɵfac = function ConfirmSignUpComponentCore_Factory(t) { return new (t || ConfirmSignUpComponentCore)(ɵngcc0.ɵɵdirectiveInject(AmplifyService)); };
ConfirmSignUpComponentCore.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ConfirmSignUpComponentCore, selectors: [["amplify-auth-confirm-sign-up-core"]], inputs: { hide: "hide", data: "data", authState: "authState", usernameAttributes: "usernameAttributes" }, decls: 3, vars: 1, consts: [["class", "amplify-container", 4, "ngIf"], [1, "amplify-container"], ["data-test", "confirm-sign-up-section", 1, "amplify-form-container"], ["data-test", "confirm-sign-up-body-section", 1, "amplify-form-body"], ["data-test", "confirm-sign-up-header-section", 1, "amplify-form-header"], [1, "amplify-form-row"], ["for", "amplifyUsername", 1, "amplify-input-label"], ["type", "text", "disabled", "", "data-test", "confirm-sign-up-username-input", 1, "amplify-form-input", 3, "placeholder", "value"], ["amplifyUsername", ""], ["for", "code", 1, "amplify-input-label"], ["type", "text", "data-test", "confirm-sign-up-confirmation-code-input", 1, "amplify-form-input", 3, "placeholder", "change", "keyup", "keyup.enter"], ["code", ""], [1, "amplify-form-action"], ["data-test", "confirm-sign-up-resend-code-link", 1, "amplify-form-link", 3, "click"], [1, "amplify-form-actions"], [1, "amplify-form-cell-left"], [1, "amplify-form-actions-left"], ["data-test", "confirm-sign-up-back-to-sign-in-link", 1, "amplify-form-link", 3, "click"], [1, "amplify-form-cell-right"], ["data-test", "confirm-sign-up-confirm-button", 1, "amplify-form-button", 3, "click"], ["class", "amplify-alert", 4, "ngIf"], [1, "amplify-alert"], [1, "amplify-alert-body"], [1, "amplify-alert-icon"], [1, "amplify-alert-message"], [1, "amplify-alert-close", 3, "click"]], template: function ConfirmSignUpComponentCore_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n");
        ɵngcc0.ɵɵtemplate(1, ConfirmSignUpComponentCore_div_1_Template, 54, 11, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx._show);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConfirmSignUpComponentCore, [{
        type: Component,
        args: [{
                selector: 'amplify-auth-confirm-sign-up-core',
                template: template
            }]
    }], function () { return [{ type: ɵngcc2.AmplifyService, decorators: [{
                type: Inject,
                args: [AmplifyService]
            }] }]; }, { hide: [{
            type: Input
        }], data: [{
            type: Input
        }], authState: [{
            type: Input
        }], usernameAttributes: [{
            type: Input
        }] }); })();
    return ConfirmSignUpComponentCore;
}());
export { ConfirmSignUpComponentCore };

//# sourceMappingURL=confirm-sign-up.component.core.js.map